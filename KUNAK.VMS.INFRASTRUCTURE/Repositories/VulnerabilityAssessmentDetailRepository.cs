using KUNAK.VMS.CORE.Entities;
using KUNAK.VMS.CORE.Interfaces;
using KUNAK.VMS.INFRASTRUCTURE.Data;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace KUNAK.VMS.INFRASTRUCTURE.Repositories
{
    public class VulnerabilityAssessmentDetailRepository:BaseRepository<VulnerabilityAssessmentDetail>, IVulnerabilityAssessmentDetailRepository
    {
        public VulnerabilityAssessmentDetailRepository(VMSContext context) : base(context) { }
        public IEnumerable<VulnerabilityAssessmentDetail> GetVulnerabilityAssessmentDetails(int idVulnerabilityAssessment)
        {
            return _entities
                .Include(x=>x.AditionalDetails)
                .Where(x => x.IdVulnerabilityAssessment == idVulnerabilityAssessment).AsEnumerable();
        }
        public IEnumerable<VulnerabilityAssessmentDetail> GetByIdScopeDetail(int idScopeDetail)
        {
            return _entities.Where(x => x.IdScopeDetail == idScopeDetail).AsEnumerable();
        }
        public VulnerabilityAssessmentDetail GetVulnerabilityAssessmentDetailById(int idVulnerabilityAssessmentDetail)
        {

            return _entities.Include(x => x.AditionalDetails)
                .Include(x => x.DetailHasEvidences)
                .ThenInclude(x => x.IdEvidenceNavigation)
                .Where(x => x.IdVulnerabilityAssessmentDetail == idVulnerabilityAssessmentDetail)
                .FirstOrDefault();
        }
    }
}
